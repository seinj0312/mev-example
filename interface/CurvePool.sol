pragma solidity ^0.8.10;

interface CurvePool {
    event AddLiquidity(address indexed provider, uint256[2] token_amounts, uint256[2] fees, uint256 invariant, uint256 token_supply);
    event Approval(address indexed owner, address indexed spender, uint256 value);
    event RampA(uint256 old_A, uint256 new_A, uint256 initial_time, uint256 future_time);
    event RemoveLiquidity(address indexed provider, uint256[2] token_amounts, uint256[2] fees, uint256 token_supply);
    event RemoveLiquidityImbalance(address indexed provider, uint256[2] token_amounts, uint256[2] fees, uint256 invariant, uint256 token_supply);
    event RemoveLiquidityOne(address indexed provider, uint256 token_amount, uint256 coin_amount, uint256 token_supply);
    event StopRampA(uint256 A, uint256 t);
    event TokenExchange(address indexed buyer, int128 sold_id, uint256 tokens_sold, int128 bought_id, uint256 tokens_bought);
    event TokenExchangeUnderlying(address indexed buyer, int128 sold_id, uint256 tokens_sold, int128 bought_id, uint256 tokens_bought);
    event Transfer(address indexed sender, address indexed receiver, uint256 value);

    function A() view external returns (uint256);
    function A_precise() view external returns (uint256);
    function add_liquidity(uint256[2] memory _amounts, uint256 _min_mint_amount) external returns (uint256);
    function add_liquidity(uint256[2] memory _amounts, uint256 _min_mint_amount, address _receiver) external returns (uint256);
    function admin_balances(uint256 i) view external returns (uint256);
    function admin_fee() view external returns (uint256);
    function allowance(address arg0, address arg1) view external returns (uint256);
    function approve(address _spender, uint256 _value) external returns (bool);
    function balanceOf(address arg0) view external returns (uint256);
    function balances(uint256 arg0) view external returns (uint256);
    function calc_token_amount(uint256[2] memory _amounts, bool _is_deposit) view external returns (uint256);
    function calc_withdraw_one_coin(uint256 _burn_amount, int128 i) view external returns (uint256);
    function coins(uint256 arg0) view external returns (address);
    function decimals() view external returns (uint256);
    function exchange(int128 i, int128 j, uint256 _dx, uint256 _min_dy) external returns (uint256);
    function exchange(int128 i, int128 j, uint256 _dx, uint256 _min_dy, address _receiver) external returns (uint256);
    function exchange_underlying(int128 i, int128 j, uint256 _dx, uint256 _min_dy) external returns (uint256);
    function exchange_underlying(int128 i, int128 j, uint256 _dx, uint256 _min_dy, address _receiver) external returns (uint256);
    function fee() view external returns (uint256);
    function future_A() view external returns (uint256);
    function future_A_time() view external returns (uint256);
    function get_dy(int128 i, int128 j, uint256 dx) view external returns (uint256);
    function get_dy_underlying(int128 i, int128 j, uint256 dx) view external returns (uint256);
    function get_virtual_price() view external returns (uint256);
    function initial_A() view external returns (uint256);
    function initial_A_time() view external returns (uint256);
    function initialize(string memory _name, string memory _symbol, address _coin, uint256 _rate_multiplier, uint256 _A, uint256 _fee) external;
    function name() view external returns (string memory);
    function ramp_A(uint256 _future_A, uint256 _future_time) external;
    function remove_liquidity(uint256 _burn_amount, uint256[2] memory _min_amounts) external returns (uint256[2] memory);
    function remove_liquidity(uint256 _burn_amount, uint256[2] memory _min_amounts, address _receiver) external returns (uint256[2] memory);
    function remove_liquidity_imbalance(uint256[2] memory _amounts, uint256 _max_burn_amount) external returns (uint256);
    function remove_liquidity_imbalance(uint256[2] memory _amounts, uint256 _max_burn_amount, address _receiver) external returns (uint256);
    function remove_liquidity_one_coin(uint256 _burn_amount, int128 i, uint256 _min_received) external returns (uint256);
    function remove_liquidity_one_coin(uint256 _burn_amount, int128 i, uint256 _min_received, address _receiver) external returns (uint256);
    function rewards_receiver() view external returns (address);
    function stop_ramp_A() external;
    function symbol() view external returns (string memory);
    function totalSupply() view external returns (uint256);
    function transfer(address _to, uint256 _value) external returns (bool);
    function transferFrom(address _from, address _to, uint256 _value) external returns (bool);
    function withdraw_admin_fees() external;
}
