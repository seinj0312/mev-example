pragma solidity ^0.8.10;

interface GMX {
    event BuyUSDG(address account, address token, uint256 tokenAmount, uint256 usdgAmount, uint256 feeBasisPoints);
    event ClosePosition(bytes32 key, uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, int256 realisedPnl);
    event CollectMarginFees(address token, uint256 feeUsd, uint256 feeTokens);
    event CollectSwapFees(address token, uint256 feeUsd, uint256 feeTokens);
    event DecreaseGuaranteedUsd(address token, uint256 amount);
    event DecreasePoolAmount(address token, uint256 amount);
    event DecreasePosition(bytes32 key, address account, address collateralToken, address indexToken, uint256 collateralDelta, uint256 sizeDelta, bool isLong, uint256 price, uint256 fee);
    event DecreaseReservedAmount(address token, uint256 amount);
    event DecreaseUsdgAmount(address token, uint256 amount);
    event DirectPoolDeposit(address token, uint256 amount);
    event IncreaseGuaranteedUsd(address token, uint256 amount);
    event IncreasePoolAmount(address token, uint256 amount);
    event IncreasePosition(bytes32 key, address account, address collateralToken, address indexToken, uint256 collateralDelta, uint256 sizeDelta, bool isLong, uint256 price, uint256 fee);
    event IncreaseReservedAmount(address token, uint256 amount);
    event IncreaseUsdgAmount(address token, uint256 amount);
    event LiquidatePosition(bytes32 key, address account, address collateralToken, address indexToken, bool isLong, uint256 size, uint256 collateral, uint256 reserveAmount, int256 realisedPnl, uint256 markPrice);
    event SellUSDG(address account, address token, uint256 usdgAmount, uint256 tokenAmount, uint256 feeBasisPoints);
    event Swap(address account, address tokenIn, address tokenOut, uint256 amountIn, uint256 amountOut, uint256 amountOutAfterFees, uint256 feeBasisPoints);
    event UpdateFundingRate(address token, uint256 fundingRate);
    event UpdatePnl(bytes32 key, bool hasProfit, uint256 delta);
    event UpdatePosition(bytes32 key, uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, int256 realisedPnl);

    function BASIS_POINTS_DIVISOR() view external returns (uint256);
    function FUNDING_RATE_PRECISION() view external returns (uint256);
    function MAX_FEE_BASIS_POINTS() view external returns (uint256);
    function MAX_FUNDING_RATE_FACTOR() view external returns (uint256);
    function MAX_LIQUIDATION_FEE_USD() view external returns (uint256);
    function MIN_FUNDING_RATE_INTERVAL() view external returns (uint256);
    function MIN_LEVERAGE() view external returns (uint256);
    function PRICE_PRECISION() view external returns (uint256);
    function USDG_DECIMALS() view external returns (uint256);
    function addRouter(address _router) external;
    function adjustForDecimals(uint256 _amount, address _tokenDiv, address _tokenMul) view external returns (uint256);
    function allWhitelistedTokens(uint256) view external returns (address);
    function allWhitelistedTokensLength() view external returns (uint256);
    function approvedRouters(address, address) view external returns (bool);
    function bufferAmounts(address) view external returns (uint256);
    function buyUSDG(address _token, address _receiver) external returns (uint256);
    function clearTokenConfig(address _token) external;
    function cumulativeFundingRates(address) view external returns (uint256);
    function decreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver) external returns (uint256);
    function directPoolDeposit(address _token) external;
    function errorController() view external returns (address);
    function errors(uint256) view external returns (string memory);
    function feeReserves(address) view external returns (uint256);
    function fundingInterval() view external returns (uint256);
    function fundingRateFactor() view external returns (uint256);
    function getDelta(address _indexToken, uint256 _size, uint256 _averagePrice, bool _isLong, uint256 _lastIncreasedTime) view external returns (bool, uint256);
    function getFeeBasisPoints(address _token, uint256 _usdgDelta, uint256 _feeBasisPoints, uint256 _taxBasisPoints, bool _increment) view external returns (uint256);
    function getFundingFee(address _token, uint256 _size, uint256 _entryFundingRate) view external returns (uint256);
    function getGlobalShortDelta(address _token) view external returns (bool, uint256);
    function getMaxPrice(address _token) view external returns (uint256);
    function getMinPrice(address _token) view external returns (uint256);
    function getNextAveragePrice(address _indexToken, uint256 _size, uint256 _averagePrice, bool _isLong, uint256 _nextPrice, uint256 _sizeDelta, uint256 _lastIncreasedTime) view external returns (uint256);
    function getNextFundingRate(address _token) view external returns (uint256);
    function getNextGlobalShortAveragePrice(address _indexToken, uint256 _nextPrice, uint256 _sizeDelta) view external returns (uint256);
    function getPosition(address _account, address _collateralToken, address _indexToken, bool _isLong) view external returns (uint256, uint256, uint256, uint256, uint256, uint256, bool, uint256);
    function getPositionDelta(address _account, address _collateralToken, address _indexToken, bool _isLong) view external returns (bool, uint256);
    function getPositionFee(uint256 _sizeDelta) view external returns (uint256);
    function getPositionKey(address _account, address _collateralToken, address _indexToken, bool _isLong) pure external returns (bytes32);
    function getPositionLeverage(address _account, address _collateralToken, address _indexToken, bool _isLong) view external returns (uint256);
    function getRedemptionAmount(address _token, uint256 _usdgAmount) view external returns (uint256);
    function getRedemptionCollateral(address _token) view external returns (uint256);
    function getRedemptionCollateralUsd(address _token) view external returns (uint256);
    function getTargetUsdgAmount(address _token) view external returns (uint256);
    function getUtilisation(address _token) view external returns (uint256);
    function globalShortAveragePrices(address) view external returns (uint256);
    function globalShortSizes(address) view external returns (uint256);
    function gov() view external returns (address);
    function guaranteedUsd(address) view external returns (uint256);
    function hasDynamicFees() view external returns (bool);
    function inManagerMode() view external returns (bool);
    function inPrivateLiquidationMode() view external returns (bool);
    function includeAmmPrice() view external returns (bool);
    function increasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external;
    function initialize(address _router, address _usdg, address _priceFeed, uint256 _liquidationFeeUsd, uint256 _fundingRateFactor, uint256 _stableFundingRateFactor) external;
    function isInitialized() view external returns (bool);
    function isLeverageEnabled() view external returns (bool);
    function isLiquidator(address) view external returns (bool);
    function isManager(address) view external returns (bool);
    function isSwapEnabled() view external returns (bool);
    function lastFundingTimes(address) view external returns (uint256);
    function liquidatePosition(address _account, address _collateralToken, address _indexToken, bool _isLong, address _feeReceiver) external;
    function liquidationFeeUsd() view external returns (uint256);
    function marginFeeBasisPoints() view external returns (uint256);
    function maxGasPrice() view external returns (uint256);
    function maxLeverage() view external returns (uint256);
    function maxUsdgAmounts(address) view external returns (uint256);
    function minProfitBasisPoints(address) view external returns (uint256);
    function minProfitTime() view external returns (uint256);
    function mintBurnFeeBasisPoints() view external returns (uint256);
    function poolAmounts(address) view external returns (uint256);
    function positions(bytes32) view external returns (uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, int256 realisedPnl, uint256 lastIncreasedTime);
    function priceFeed() view external returns (address);
    function removeRouter(address _router) external;
    function reservedAmounts(address) view external returns (uint256);
    function router() view external returns (address);
    function sellUSDG(address _token, address _receiver) external returns (uint256);
    function setBufferAmount(address _token, uint256 _amount) external;
    function setError(uint256 _errorCode, string memory _error) external;
    function setErrorController(address _errorController) external;
    function setFees(uint256 _taxBasisPoints, uint256 _stableTaxBasisPoints, uint256 _mintBurnFeeBasisPoints, uint256 _swapFeeBasisPoints, uint256 _stableSwapFeeBasisPoints, uint256 _marginFeeBasisPoints, uint256 _liquidationFeeUsd, uint256 _minProfitTime, bool _hasDynamicFees) external;
    function setFundingRate(uint256 _fundingInterval, uint256 _fundingRateFactor, uint256 _stableFundingRateFactor) external;
    function setGov(address _gov) external;
    function setInManagerMode(bool _inManagerMode) external;
    function setInPrivateLiquidationMode(bool _inPrivateLiquidationMode) external;
    function setIsLeverageEnabled(bool _isLeverageEnabled) external;
    function setIsSwapEnabled(bool _isSwapEnabled) external;
    function setLiquidator(address _liquidator, bool _isActive) external;
    function setManager(address _manager, bool _isManager) external;
    function setMaxGasPrice(uint256 _maxGasPrice) external;
    function setMaxLeverage(uint256 _maxLeverage) external;
    function setPriceFeed(address _priceFeed) external;
    function setTokenConfig(address _token, uint256 _tokenDecimals, uint256 _tokenWeight, uint256 _minProfitBps, uint256 _maxUsdgAmount, bool _isStable, bool _isShortable) external;
    function setUsdgAmount(address _token, uint256 _amount) external;
    function shortableTokens(address) view external returns (bool);
    function stableFundingRateFactor() view external returns (uint256);
    function stableSwapFeeBasisPoints() view external returns (uint256);
    function stableTaxBasisPoints() view external returns (uint256);
    function stableTokens(address) view external returns (bool);
    function swap(address _tokenIn, address _tokenOut, address _receiver) external returns (uint256);
    function swapFeeBasisPoints() view external returns (uint256);
    function taxBasisPoints() view external returns (uint256);
    function tokenBalances(address) view external returns (uint256);
    function tokenDecimals(address) view external returns (uint256);
    function tokenToUsdMin(address _token, uint256 _tokenAmount) view external returns (uint256);
    function tokenWeights(address) view external returns (uint256);
    function totalTokenWeights() view external returns (uint256);
    function updateCumulativeFundingRate(address _token) external;
    function upgradeVault(address _newVault, address _token, uint256 _amount) external;
    function usdToToken(address _token, uint256 _usdAmount, uint256 _price) view external returns (uint256);
    function usdToTokenMax(address _token, uint256 _usdAmount) view external returns (uint256);
    function usdToTokenMin(address _token, uint256 _usdAmount) view external returns (uint256);
    function usdg() view external returns (address);
    function usdgAmounts(address) view external returns (uint256);
    function useSwapPricing() view external returns (bool);
    function validateLiquidation(address _account, address _collateralToken, address _indexToken, bool _isLong, bool _raise) view external returns (uint256, uint256);
    function whitelistedTokenCount() view external returns (uint256);
    function whitelistedTokens(address) view external returns (bool);
    function withdrawFees(address _token, address _receiver) external returns (uint256);
}
